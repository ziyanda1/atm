DROP TABLE IF EXISTS CLIENT_TYPE;
CREATE TABLE CLIENT_TYPE(
    CLIENT_TYPE_CODE VARCHAR(2) NOT NULL,
    DESCRIPTION VARCHAR(255) NOT NULL,

    PRIMARY KEY(CLIENT_TYPE_CODE)
);

DROP TABLE IF EXISTS CLIENT_SUB_TYPE;
CREATE TABLE CLIENT_SUB_TYPE(
    CLIENT_SUB_TYPE_CODE VARCHAR(4) NOT NULL,
    CLIENT_TYPE_CODE VARCHAR(2) NOT NULL,
    DESCRIPTION VARCHAR(255) NOT NULL,

    PRIMARY KEY(CLIENT_SUB_TYPE_CODE),
    FOREIGN KEY(CLIENT_TYPE_CODE) REFERENCES CLIENT_TYPE(CLIENT_TYPE_CODE)
);

DROP TABLE IF EXISTS CLIENT;
CREATE TABLE CLIENT(
   CLIENT_ID INTEGER(10) NOT NULL AUTO_INCREMENT,
   TITLE VARCHAR(10) NULL,
   NAME VARCHAR(255) NOT NULL,
   SURNAME VARCHAR(100) NULL,
   DOB DATE(8) NOT NULL,
   CLIENT_SUB_TYPE_CODE VARCHAR(4) NOT NULL,

   PRIMARY KEY(CLIENT_ID),
   FOREIGN KEY(CLIENT_SUB_TYPE_CODE) REFERENCES CLIENT_SUB_TYPE(CLIENT_SUB_TYPE_CODE)
);

DROP TABLE IF EXISTS ACCOUNT_TYPE;
CREATE TABLE ACCOUNT_TYPE(
    ACCOUNT_TYPE_CODE VARCHAR(10) NOT NULL,
    DESCRIPTION VARCHAR(50),
    TRANSACTIONAL BOOLEAN(1) NULL,

    PRIMARY KEY(ACCOUNT_TYPE_CODE)
);

DROP TABLE IF EXISTS CURRENCY;
CREATE TABLE CURRENCY(
    CURRENCY_CODE VARCHAR(3) NOT NULL,
    DECIMAL_PLACES INTEGER(10) NOT NULL,
    DESCRIPTION VARCHAR(255) NOT NULL,

    PRIMARY KEY(CURRENCY_CODE)
);

DROP TABLE IF EXISTS CURRENCY_CONVERSION_RATE;
CREATE TABLE CURRENCY_CONVERSION_RATE(
    CURRENCY_CODE VARCHAR(3) NOT NULL,
    CONVERSION_INDICATOR VARCHAR(1) NOT NULL,
    RATE DECIMAL(18,8) NOT NULL,

    PRIMARY KEY(CURRENCY_CODE),
    FOREIGN KEY(CURRENCY_CODE) REFERENCES CURRENCY(CURRENCY_CODE)
);

DROP TABLE IF EXISTS CLIENT_ACCOUNT;
CREATE TABLE CLIENT_ACCOUNT(
    CLIENT_ACCOUNT_NUMBER VARCHAR(10) NOT NULL,
    CLIENT_ID INTEGER(10) NOT NULL,
    ACCOUNT_TYPE_CODE VARCHAR(10) NOT NULL,
    CURRENCY_CODE VARCHAR(3) NOT NULL,
    DISPLAY_BALANCE DECIMAL(18,3) NULL,

    PRIMARY KEY(CLIENT_ACCOUNT_NUMBER),
    FOREIGN KEY(CLIENT_ID) REFERENCES CLIENT(CLIENT_ID),
    FOREIGN KEY(ACCOUNT_TYPE_CODE) REFERENCES ACCOUNT_TYPE(ACCOUNT_TYPE_CODE),
    FOREIGN KEY(CURRENCY_CODE) REFERENCES CURRENCY(CURRENCY_CODE)
);

DROP TABLE IF EXISTS CREDIT_CARD_LIMIT;
CREATE TABLE CREDIT_CARD_LIMIT(
   CLIENT_ACCOUNT_NUMBER VARCHAR(10) NOT NULL,
   ACCOUNT_LIMIT DECIMAL(10,3) NOT NULL,

   PRIMARY KEY(CLIENT_ACCOUNT_NUMBER),
   FOREIGN KEY(CLIENT_ACCOUNT_NUMBER) REFERENCES CLIENT_ACCOUNT(CLIENT_ACCOUNT_NUMBER)
);

DROP TABLE IF EXISTS ATM;
CREATE TABLE ATM(
    ATM_ID INTEGER(10) NOT NULL,
    NAME VARCHAR(10) NOT NULL,
    LOCATION VARCHAR(255) NOT NULL,

    PRIMARY KEY(ATM_ID)
);


DROP TABLE IF EXISTS DENOMINATION_TYPE;
CREATE TABLE DENOMINATION_TYPE(
    DENOMINATION_TYPE_CODE VARCHAR(1) NOT NULL,
    DESCRIPTION VARCHAR(255) NOT NULL,

    PRIMARY KEY(DENOMINATION_TYPE_CODE)
);

DROP TABLE IF EXISTS DENOMINATION;
CREATE TABLE DENOMINATION(
    DENOMINATION_ID INTEGER(10) NOT NULL AUTO_INCREMENT,
    VALUE DECIMAL(65535, 32767) NOT NULL,
    DENOMINATION_TYPE_CODE VARCHAR(1) NULL,

    PRIMARY KEY(DENOMINATION_ID),
    FOREIGN KEY(DENOMINATION_TYPE_CODE) REFERENCES DENOMINATION_TYPE(DENOMINATION_TYPE_CODE)
);

DROP TABLE IF EXISTS ATM_ALLOCATION;
CREATE TABLE ATM_ALLOCATION(
    ATM_ALLOCATION_ID INTEGER(10) NOT NULL,
    ATM_ID INTEGER(10) NOT NULL,
    DENOMINATION_ID INTEGER(10) NOT NULL,
    "COUNT" INTEGER(10) NOT NULL,

    PRIMARY KEY(ATM_ALLOCATION_ID),
    FOREIGN KEY(ATM_ID) REFERENCES ATM(ATM_ID),
    FOREIGN KEY(DENOMINATION_ID) REFERENCES DENOMINATION(DENOMINATION_ID)
);